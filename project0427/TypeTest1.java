class TypeTest1{
	public static void main(String[] args){
		byte b=5;
		short s=8;

		//s=b;  //실행가능 : 작은거를 큰거에 담음
		//b=s;   //실행불가능 : 큰거를 작은거에 담음

		short s1=8;
		short s2=9;
		//아래의 코드가 컴파일 에러가 발생하는 이유는 고정적인 C언어를 포함하여, 현대의 컴퓨터 언어에 이르기까지
		//정수의 연산은 int를 기준으로 최적화  되어있기 때문에, 연산시 int보다 작은 자료형들은 컴파일러에 의해
		//자동으로 자료형을 int형으로 변환해버린다, 이러한 현상을 개발자에 의해서가 아니라 시스템에 의한 형변환이르모
		//자동형변환 이라 한다.
		//참고로, 왜 int이하면 적용되는가? : 손실을 발생시키면서까지 속도를 올릴 이유는 없다.
		short result = (short)(s1+s2);
		//연산을 수행하기 전에 시스템이 s1,s2를 int로 변환한 후 , 연산을 수행한다
		//해결책1) short rusult를 int result로 선언한다
		//해결책2) 개발자가 손실을 감안하고, 그대로 강경하게 밀어붙임 -> 강제 형변환
		//이때 사용하는 (자료형) 소괄호를 cast 연산자라고 부른다.



		long x=65;
		int k=78;
		//int result = x+k;   //에러
		//int result = (int)(x+k);
		//long result = x+k;
		//컴파일러가 연산을 수행할때는 연산 대상이 되는 데이터는 무조건 같은 자료형으로
		//수평을 맞추고 나서 수행한다. 이때 데이터 손실이 발생하지 않도록 큰 자료형을 기준으로 형 변환된다.
	}
}